1. config_orig.php скопировать в www/config.php
2. настроить apache корневой директорией на www
3. настроить конфигурацию

описание карты маршрутизации:
.1. все пути считаются от точки входа
.2. если открыт новый файла машрутов, то входная точка для него - точка передачи

/* first (public,private) */
$_MAP = array(
    "doc" => array(                                 // в пути содержится /doc/*
        "/" =>    'controller'                      // в пути содержится /doc , remaider = [] , если не описано сама нода будет выдавать 404
        "view" => 'controller',                     // в пути содержится /doc/view/*  , remaider = [все после view]
        "edit" => 'controller'                      // в пути содержится /doc/edit/*  , remaider = [все после edit]
        "cross" => array (                          // в пути содержится /doc/cross/*
                "view" => 'tst/',                   // в пути содержится /doc/cross/view/* , remaider = [все после view]
                "test" => array()                   // вложений может сколько угодно и даже пустое, правда смысла в нем не будет
            )
        ),
    "serv" => array(                                // от этого пути вызвать другой мап-файл, для него станет корнем /serv/*
        "map" => true,                              // если map будет иметь тип bool == true то выбор файла, все параметры кроме file будут проигнорированы, если string, то путь до файла, если array то массив путей как обычно
        "file" => '/server/map/serv.php'            // будет загружен мап-файл по пути $path/server/map/serv.php , если он содержит правильный формат, начнется такая же обработка, корнем для него будет уже /serv/
    )
);

/* serv */
$_MAP = array(
    "view" => '/test',                              // в пути содержится /serv/view/* , как видно отсчет идет от точки входа /serv , remaider = [все после view]
);

/* controller */
$_CNTRL = Array(
    "auth" => [
        "file" => 'server/document'                 // будет вызван файл $path/server/document/index.php
        "file" => '/server/view/doc/',              // будет вызван файл $path/server/view/doc/index.php
        "file" => '/server/edit/doc/edit.php'       // будет вызван файл $path/server/edit/doc/edit.php
        "class" => "Auth",                          // имя класса, по умолчанию будет вызавн класс == имени файла, если файл index, то имени дирректории
        "html" => true,                             // прорисовка html вывода с шапкой и подвалом
        "init" => "init",                           // метод который будет вызван из созданного класса
        "type" => "class",                          // создавать класс или просто инклудить
        "config" => true,                           // передавать глобальный конфиг в конструктор / глобальную переменную для не классов
        "global" => [                               // список передаваемых параметров массивом в метод класса / глобальную переменную для не классов. Поддерживаются ссылка на экземпляр DB - база данных, Session - сессия и Remaider - массив оставшегося пути
            "DB", "Session"
        ],
        "before" => [ // start before this controller // список контроллеров которые необходимо запустить До
            "test"
        ],
        "after" => [ // start after this controller   // список контроллеров которые необходимо запустить После

        ],
    ]

.3. Глобальные переменные
$GLOBALS["DB"]          - ссылка на экземпляр класса работы с БД (есть только загулшка)
$GLOBALS["Session"]     - ссылка на экземпляр класса работы с сессией (сейчас есть обертка для безопастной работы со штатной сессией, можно дописать другие варианты в БД например)
$GLOBALS["Remainder"]    - массив оставшегося пути, роутинг закончит работать при первом полном совпадении пути.
    Пример путь был /doc/cross/view/pre/100/152?uid=234&t=54 , то в массив будет ["pre","100","152"]